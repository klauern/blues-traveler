{"id":"blues-traveler-1","title":"Integrate log rotation into logging system","description":"Log rotation is configured via lumberjack but not actually used. The logging system writes directly to OpenFile instead of through the rotating logger.","design":"Wire lumberjack into logging system by adding LogWriter io.Writer to HookContext. When LogWriter is present, write logs through it instead of directly to file. This will enable actual log rotation based on configured settings.","acceptance_criteria":"- LogWriter field added to HookContext\n- Logging writes through LogWriter when present\n- Log rotation settings (maxAge, maxSize, maxBackups, compress) are applied\n- Tests verify rotation behavior","status":"open","priority":3,"issue_type":"feature","created_at":"2025-10-17T11:05:23.971897-05:00","updated_at":"2025-10-17T11:05:23.971897-05:00"}
{"id":"blues-traveler-10","title":"Refactor top 3 complex functions (cognitive complexity \u0026gt;80)","description":"Reduce cognitive complexity of:\n1. newHooksCustomSyncCommand: 103 (target: \u0026lt;30) - internal/cmd/hooks.go:763:1\n2. newHooksCustomInstallCommand: 81 (target: \u0026lt;30) - internal/cmd/hooks.go:574:1  \n3. newHooksCustomBlockedCommand: 52 (target: \u0026lt;30) - internal/cmd/hooks.go:1161:1\n\nExtract nested logic into helper functions with descriptive names.","acceptance_criteria":"All three functions have cognitive complexity \u0026lt;30, tests passing","status":"closed","priority":1,"issue_type":"task","assignee":"klauern","created_at":"2025-10-25T16:34:05.559303-05:00","updated_at":"2025-10-25T18:13:24.355532-05:00","closed_at":"2025-10-25T18:13:24.355532-05:00","labels":["high-roi","priority-1","refactoring"],"dependencies":[{"issue_id":"blues-traveler-10","depends_on_id":"blues-traveler-17","type":"related","created_at":"2025-10-25T16:36:58.734954-05:00","created_by":"daemon"},{"issue_id":"blues-traveler-10","depends_on_id":"blues-traveler-8","type":"parent-child","created_at":"2025-10-25T16:37:15.577819-05:00","created_by":"daemon"}]}
{"id":"blues-traveler-11","title":"Add error checking to defer statements in tests","description":"Fix 31 unchecked errors, primarily in test cleanup code. Replace patterns like:\n  defer os.RemoveAll(tempDir)\n  defer os.Setenv(...)\n  \nWith proper error handling:\n  t.Cleanup(func() {\n      if err := os.RemoveAll(tempDir); err != nil {\n          t.Logf(\"cleanup failed: %v\", err)\n      }\n  })","acceptance_criteria":"All errcheck linter issues resolved (31 occurrences)","status":"closed","priority":1,"issue_type":"task","assignee":"klauern","created_at":"2025-10-25T16:34:05.716457-05:00","updated_at":"2025-10-25T18:42:06.45418-05:00","closed_at":"2025-10-25T18:42:06.45418-05:00","labels":["error-handling","high-roi","priority-1"],"dependencies":[{"issue_id":"blues-traveler-11","depends_on_id":"blues-traveler-17","type":"related","created_at":"2025-10-25T16:36:58.873102-05:00","created_by":"daemon"},{"issue_id":"blues-traveler-11","depends_on_id":"blues-traveler-8","type":"parent-child","created_at":"2025-10-25T16:37:15.69978-05:00","created_by":"daemon"}]}
{"id":"blues-traveler-12","title":"Create constants for repeated strings","description":"Replace 10 occurrences of string duplication with constants:\n- \"project\" - 11 occurrences\n- \"global\" - 11 occurrences  \n- \"json\" - 12 occurrences\n- \"toml\" - 4 occurrences\n- Tool names: \"Bash\", \"Edit\", \"Write\" - 6 occurrences each\n\nCreate constant package or add to existing constants.","acceptance_criteria":"All goconst linter issues resolved (10 occurrences), constants defined and used throughout codebase","status":"closed","priority":1,"issue_type":"task","assignee":"klauern","created_at":"2025-10-25T16:34:05.88164-05:00","updated_at":"2025-10-25T18:51:50.309881-05:00","closed_at":"2025-10-25T18:51:50.309881-05:00","labels":["duplication","high-roi","priority-1"],"dependencies":[{"issue_id":"blues-traveler-12","depends_on_id":"blues-traveler-17","type":"related","created_at":"2025-10-25T16:36:59.011951-05:00","created_by":"daemon"},{"issue_id":"blues-traveler-12","depends_on_id":"blues-traveler-8","type":"parent-child","created_at":"2025-10-25T16:37:15.835335-05:00","created_by":"daemon"}]}
{"id":"blues-traveler-13","title":"Refactor tests to table-driven patterns","description":"Simplify complex test functions using Go table-driven test pattern:\n- TestLoadConfigWithFallback: complexity 22 - internal/config/enhanced_loading_test.go:20:1\n- TestGetMigrationStatus: complexity 18 - internal/config/migration_test.go:379:1  \n- TestActualMigration: complexity 15 - internal/config/migration_test.go:180:1\n- runConfigSync: complexity 44 - internal/cmd/config_sync_test.go:150:1\n\nBreak into smaller test cases with clear names.","acceptance_criteria":"Test complexity reduced below 15 for all identified functions, tests remain comprehensive","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-25T16:34:06.054463-05:00","updated_at":"2025-10-25T16:34:06.054463-05:00","labels":["medium-roi","priority-2","testing"],"dependencies":[{"issue_id":"blues-traveler-13","depends_on_id":"blues-traveler-8","type":"parent-child","created_at":"2025-10-25T16:37:15.958237-05:00","created_by":"daemon"}]}
{"id":"blues-traveler-14","title":"Split large config files","description":"Refactor oversized config-related files:\n- internal/config/migration_test.go: 571 lines (complexity: 22, 18, 15, 13, 12)\n- internal/cmd/config_xdg.go: 566 lines (complexity: 38)\n- internal/config/settings.go: 560 lines (complexity: 18)\n- internal/config/enhanced_loading_test.go: 495 lines (complexity: 22)\n\nSplit by logical concern while maintaining cohesion.","acceptance_criteria":"Files split into smaller units (\u0026lt;400 lines), complexity metrics improved","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-25T16:34:06.218989-05:00","updated_at":"2025-10-25T16:34:06.218989-05:00","labels":["medium-roi","priority-2","refactoring"],"dependencies":[{"issue_id":"blues-traveler-14","depends_on_id":"blues-traveler-8","type":"parent-child","created_at":"2025-10-25T16:37:16.079365-05:00","created_by":"daemon"}]}
{"id":"blues-traveler-15","title":"Add godoc comments to exported functions","description":"Fix 78 revive issues related to missing documentation:\n- Package comments missing: 9 packages\n- Exported functions without comments: 30+\n- Unused parameter names: 25+\n\nAdd proper godoc comments following Go conventions.","acceptance_criteria":"All revive linter issues resolved (78 occurrences), godoc complete","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-25T16:34:06.394996-05:00","updated_at":"2025-10-25T16:34:06.394996-05:00","labels":["documentation","medium-roi","priority-2"],"dependencies":[{"issue_id":"blues-traveler-15","depends_on_id":"blues-traveler-8","type":"parent-child","created_at":"2025-10-25T16:37:16.203078-05:00","created_by":"daemon"}]}
{"id":"blues-traveler-16","title":"Remove or fix unused parameters","description":"Address 2 unparam issues:\n- (*FetchBlockerHook).loadBlockedFromConfig always returns nil error - internal/hooks/fetch_blocker.go:177:70\n- Other functions with unused parameters\n\nRemove unused parameters or add _ prefix if needed for interface compliance.","acceptance_criteria":"All unparam linter issues resolved","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-25T16:34:06.552775-05:00","updated_at":"2025-10-25T16:34:06.552775-05:00","labels":["cleanup","medium-roi","priority-2"],"dependencies":[{"issue_id":"blues-traveler-16","depends_on_id":"blues-traveler-8","type":"parent-child","created_at":"2025-10-25T16:37:16.338152-05:00","created_by":"daemon"}]}
{"id":"blues-traveler-17","title":"Setup CI pipeline with golangci-lint","description":"Integrate golangci-lint into CI/CD pipeline using .golangci.yml configuration.\n\nSetup automated checks for:\n- Cyclomatic complexity\n- Cognitive complexity  \n- Error checking\n- Code duplication\n- Documentation\n\nConfigure to fail on new high-complexity code.","acceptance_criteria":"CI running golangci-lint, blocking PRs with complexity violations","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-25T16:34:06.717655-05:00","updated_at":"2025-10-25T16:34:06.717655-05:00","labels":["ci","long-term","priority-3"],"dependencies":[{"issue_id":"blues-traveler-17","depends_on_id":"blues-traveler-18","type":"blocks","created_at":"2025-10-25T16:36:59.152736-05:00","created_by":"daemon"}]}
{"id":"blues-traveler-18","title":"Establish complexity budget and prevention","description":"Incrementally reduce complexity thresholds to prevent regression:\n- Phase 1: Current state (cyclop: 15, cognit: 20)\n- Phase 2: Reduce to 10\n- Phase 3: Reduce to 8  \n- Phase 4: Target 5\n\nDocument complexity budget policy and enforce in code reviews.","acceptance_criteria":"Complexity policy documented, thresholds reduced to target levels over time","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-25T16:34:06.88781-05:00","updated_at":"2025-10-25T16:34:06.88781-05:00","labels":["long-term","priority-3","process"]}
{"id":"blues-traveler-19","title":"Fix variable shadowing built-in 'any' type","description":"Rename variable in internal/core/expressions.go:27:2 that shadows Go 1.18+ built-in 'any' type alias.\n\nChange to anyMatch or hasAny. Consider if custom expression evaluation can be simplified.","acceptance_criteria":"Variable renamed, no shadowing of built-in types","status":"open","priority":2,"issue_type":"bug","created_at":"2025-10-25T16:34:07.064132-05:00","updated_at":"2025-10-25T16:34:07.064132-05:00","labels":["modernization","priority-2","quick-fix"],"dependencies":[{"issue_id":"blues-traveler-19","depends_on_id":"blues-traveler-8","type":"parent-child","created_at":"2025-10-25T16:37:16.467588-05:00","created_by":"daemon"}]}
{"id":"blues-traveler-2","title":"Add external tool availability detection","description":"Format and vet hooks depend on external tools (prettier, uvx, ruff, ty, fd) without checking if they're available, leading to confusing error messages.","design":"Add lazy tool detection with helpful error messages. Check tool availability before use and provide installation instructions if missing. Tools to check: prettier, uvx, ruff, ty, fd.","acceptance_criteria":"- Tool availability check before execution\n- Clear error messages with installation instructions\n- Graceful degradation when tools are missing\n- Tests for tool detection logic","status":"open","priority":3,"issue_type":"feature","created_at":"2025-10-17T11:05:24.063588-05:00","updated_at":"2025-10-17T11:05:24.063588-05:00"}
{"id":"blues-traveler-20","title":"Add hooks doctor command to diagnose installation status","description":"Implement a `hooks doctor` command that shows:\n- Which hooks are installed\n- Installation contexts (project vs user/global)\n- Configuration file locations and their precedence\n- Validation status of hook configurations\n- Potential issues or conflicts\n\nThis will help users understand their hooks setup and troubleshoot issues.","design":"Based on exploration of the codebase:\n1. Add new subcommand to internal/cmd/hooks.go under NewHooksCommand\n2. Create newHooksDoctorCommand() function\n3. Leverage existing config.LoadHooksConfig() to discover configurations\n4. Report on:\n   - Project-level hooks (.claude/hooks/)\n   - Global-level hooks (~/.claude/hooks/)\n   - Configuration merge order and precedence\n   - Validation results\n5. Provide helpful output showing installation health","acceptance_criteria":"- `blues-traveler hooks doctor` command runs successfully\n- Shows installed hooks from both project and global contexts\n- Displays configuration file locations\n- Validates hook configurations and reports issues\n- Output is clear and actionable\n- Tests added for the new command","status":"closed","priority":2,"issue_type":"feature","created_at":"2025-10-25T18:34:01.5946-05:00","updated_at":"2025-10-25T18:53:24.407652-05:00","closed_at":"2025-10-25T18:53:24.407652-05:00"}
{"id":"blues-traveler-21","title":"Reduce cognitive complexity in newHooksInstallCommand (46 \u003e 20)","description":"Function newHooksInstallCommand in internal/cmd/hooks_install.go:15 has cognitive complexity of 46, exceeding threshold of 20","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-25T19:49:38.806101-05:00","updated_at":"2025-10-25T19:49:38.806101-05:00","labels":["complexity","gocognit","refactor"]}
{"id":"blues-traveler-22","title":"Reduce cognitive complexity in newHooksCustomInitCommand (47 \u003e 20)","description":"Function newHooksCustomInitCommand in internal/cmd/hooks_custom_init.go:15 has cognitive complexity of 47, exceeding threshold of 20","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-25T19:49:38.939257-05:00","updated_at":"2025-10-25T19:49:38.939257-05:00","labels":["complexity","gocognit","refactor"]}
{"id":"blues-traveler-23","title":"Reduce cognitive complexity in FetchBlockerHook.preToolUseHandler (21 \u003e 20)","description":"Function (*FetchBlockerHook).preToolUseHandler in internal/hooks/fetch_blocker.go:39 has cognitive complexity of 21, exceeding threshold of 20","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-25T19:49:39.070161-05:00","updated_at":"2025-10-25T19:49:39.070161-05:00","labels":["complexity","gocognit","refactor"]}
{"id":"blues-traveler-24","title":"Reduce cognitive complexity in init function (22 \u003e 20)","description":"Function init in internal/hooks/init.go:11 has cognitive complexity of 22, exceeding threshold of 20","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-25T19:49:39.205266-05:00","updated_at":"2025-10-25T19:49:39.205266-05:00","labels":["complexity","gocognit","refactor"]}
{"id":"blues-traveler-25","title":"Reduce cognitive complexity in SecurityHook.preToolUseHandler (29 \u003e 20)","description":"Function (*SecurityHook).preToolUseHandler in internal/hooks/security.go:36 has cognitive complexity of 29, exceeding threshold of 20","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-25T19:49:39.33927-05:00","updated_at":"2025-10-25T19:49:39.33927-05:00","labels":["complexity","gocognit","refactor"]}
{"id":"blues-traveler-26","title":"Reduce cognitive complexity in GetConfigGroupsInSettings (22 \u003e 20)","description":"Function GetConfigGroupsInSettings in internal/config/settings.go:502 has cognitive complexity of 22, exceeding threshold of 20","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-25T19:49:39.487766-05:00","updated_at":"2025-10-25T19:49:39.487766-05:00","labels":["complexity","gocognit","refactor"]}
{"id":"blues-traveler-27","title":"Reduce cognitive complexity in TestLoadConfigWithFallback (25 \u003e 20)","description":"Function TestLoadConfigWithFallback in internal/config/enhanced_loading_test.go:20 has cognitive complexity of 25, exceeding threshold of 20","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-25T19:49:39.635793-05:00","updated_at":"2025-10-25T19:49:39.635793-05:00","labels":["complexity","gocognit","refactor","test"]}
{"id":"blues-traveler-28","title":"Reduce cognitive complexity in mergeHookMatcher (28 \u003e 20)","description":"Function mergeHookMatcher in internal/config/settings.go:244 has cognitive complexity of 28, exceeding threshold of 20","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-25T19:49:39.79073-05:00","updated_at":"2025-10-25T19:49:39.79073-05:00","labels":["complexity","gocognit","refactor"]}
{"id":"blues-traveler-29","title":"Reduce cognitive complexity in candidateConfigPaths (32 \u003e 20)","description":"Function candidateConfigPaths in internal/config/hooks_config.go:44 has cognitive complexity of 32, exceeding threshold of 20","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-25T19:49:39.936245-05:00","updated_at":"2025-10-25T19:49:39.936245-05:00","labels":["complexity","gocognit","refactor"]}
{"id":"blues-traveler-3","title":"Add settings precedence tests","description":"No tests exist for project-override-global configuration scenarios. Need comprehensive tests to ensure project settings properly override global settings.","acceptance_criteria":"- Test: project enabled + global disabled = enabled\n- Test: project disabled + global enabled = disabled  \n- Test: project nil + global enabled = enabled\n- Test: project nil + global disabled = disabled\n- All precedence scenarios covered","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-17T11:05:24.144727-05:00","updated_at":"2025-10-17T11:05:24.144727-05:00"}
{"id":"blues-traveler-30","title":"Reduce cognitive complexity in MockCommandExecutor.WasCommandExecuted (22 \u003e 20)","description":"Function (*MockCommandExecutor).WasCommandExecuted in internal/core/mocks.go:159 has cognitive complexity of 22, exceeding threshold of 20","status":"open","priority":3,"issue_type":"task","created_at":"2025-10-25T19:49:40.100496-05:00","updated_at":"2025-10-25T19:49:40.100496-05:00","labels":["complexity","gocognit","refactor","test"]}
{"id":"blues-traveler-4","title":"Add diagnose command","description":"No way to check tool availability or configuration status. A diagnose command would help users troubleshoot issues.","design":"Add 'blues-traveler diagnose' command that checks:\n- External tool availability (gofumpt, prettier, fd, uvx, etc)\n- Configuration file locations and validity\n- Logging status and rotation config\n- Installed hooks\nProvide actionable output with installation instructions for missing tools.","acceptance_criteria":"- Command shows tool availability status\n- Shows configuration file paths\n- Shows logging and rotation status\n- Provides installation instructions for missing tools\n- Tests for diagnose command","status":"open","priority":2,"issue_type":"feature","created_at":"2025-10-17T11:05:24.227799-05:00","updated_at":"2025-10-17T11:05:24.227799-05:00"}
{"id":"blues-traveler-5","title":"Clean up duplicate imports","description":"Some files have duplicate imports with different aliases for the same package, making the code less readable.","acceptance_criteria":"- All duplicate imports removed\n- Single consistent import alias used per package\n- Code still compiles and passes tests","status":"closed","priority":1,"issue_type":"chore","assignee":"klauern","created_at":"2025-10-17T11:05:24.315594-05:00","updated_at":"2025-10-25T19:22:18.094909-05:00","closed_at":"2025-10-25T19:22:18.094909-05:00"}
{"id":"blues-traveler-6","title":"Improve error messages with context and suggestions","description":"Some error messages could be more helpful by adding context about what went wrong and suggestions for how to fix it.","acceptance_criteria":"- Error messages include context about what operation failed\n- Error messages provide suggestions for resolution\n- User-facing errors are clear and actionable","status":"closed","priority":1,"issue_type":"chore","assignee":"klauern","created_at":"2025-10-17T11:05:24.406731-05:00","updated_at":"2025-10-25T19:24:41.030556-05:00","closed_at":"2025-10-25T19:24:41.030556-05:00"}
{"id":"blues-traveler-7","title":"Enable performance hook when properly integrated","description":"Performance hook exists but is commented out in init.go. Need to properly integrate and enable the performance monitoring hook.","design":"Review performance.go implementation, ensure it's properly integrated with the hook system, add tests if missing, and uncomment the registration in init.go. If performance.go doesn't exist, create it with basic performance monitoring capabilities (timing, resource usage, etc.).","acceptance_criteria":"- Performance hook implementation reviewed or created\n- Tests added for performance hook\n- Hook properly registered in init.go\n- Documentation updated with performance hook usage","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-17T11:05:44.288079-05:00","updated_at":"2025-10-17T11:05:44.288079-05:00"}
{"id":"blues-traveler-8","title":"Code Complexity Reduction Initiative","description":"Address 171 complexity issues identified in golangci-lint audit. Focus on reducing cognitive complexity, improving maintainability, and establishing quality gates.","acceptance_criteria":"All priority 1-2 tasks completed, CI pipeline with golangci-lint running, complexity metrics showing improvement","status":"in_progress","priority":1,"issue_type":"epic","assignee":"klauern","created_at":"2025-10-25T16:34:05.245877-05:00","updated_at":"2025-10-25T18:27:06.062161-05:00"}
{"id":"blues-traveler-9","title":"Refactor hooks.go into multiple files","description":"Break up internal/cmd/hooks.go (1,512 lines) into 5-7 smaller files by concern:\n- hooks_install.go - Installation logic\n- hooks_sync.go - Sync operations  \n- hooks_custom.go - Custom hook management\n- hooks_blocked.go - Blocked URL management\n- hooks_init.go - Initialization logic\n\nThis file contains functions with cognitive complexity up to 103 (target: \u0026lt;30)","design":"Extract functions by their primary responsibility. Maintain backward compatibility through package-internal interfaces if needed.","acceptance_criteria":"- hooks.go split into 5-7 files of ~200-300 lines each\n- All tests passing\n- No exported API changes","status":"closed","priority":1,"issue_type":"task","assignee":"klauern","created_at":"2025-10-25T16:34:05.404539-05:00","updated_at":"2025-10-25T17:28:42.283636-05:00","closed_at":"2025-10-25T17:28:42.283636-05:00","labels":["high-roi","priority-1","refactoring"],"dependencies":[{"issue_id":"blues-traveler-9","depends_on_id":"blues-traveler-10","type":"blocks","created_at":"2025-10-25T16:36:58.468556-05:00","created_by":"daemon"},{"issue_id":"blues-traveler-9","depends_on_id":"blues-traveler-17","type":"related","created_at":"2025-10-25T16:36:58.60338-05:00","created_by":"daemon"},{"issue_id":"blues-traveler-9","depends_on_id":"blues-traveler-8","type":"parent-child","created_at":"2025-10-25T16:37:15.46012-05:00","created_by":"daemon"}]}
